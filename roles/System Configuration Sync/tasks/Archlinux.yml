---
# Arch specific tasks
- debug: msg="Running Arch Linux System Configuration Synchronization"

- name: Update pacman Cache
  pacman:
    update_cache: yes
    upgrade: yes

- name: Install reflector
  pacman:
    name: reflector
    state: latest

- name: Run reflector
  command: reflector --latest 200 --protocol http --protocol https --sort rate --save /etc/pacman.d/mirrorlist
  become: yes
  become_method: sudo

- name: Install Linux and tools
  pacman:
    name: 
      - linux
      - linux-headers
      - base-devel
      - clamav
      - coreutils
      - dhcpcd
      - e2fsprogs
      - efibootmgr
      - exfat-utils
      - grub
      - htop
      - iproute2
      - iputils
      - less
      - lvm2
      - neovim
      - ntfs-3g
      - openssh
      - reflector
      - util-linux
      - zsh
    state: latest

- name: Install Dev Packages
  pacman:
    name:
      - docker
      - go
      - python
      - python-pip
      - ruby
      - git
    state: latest

- name: Create AUR Manager
  user:
    name: aurman
    comment: "AUR Manager"
    shell: /bin/nologin
    home: /home/aurman
    append: yes
  
- name: Set AUR Manager permissions
  lineinfile:
    path: /etc/sudoers.d/11-install-aurman
    line: 'aurman ALL=(ALL) NOPASSWD: /usr/bin/pacman'
    create: yes
    validate: 'visudo -cf %s'

- stat: path=/home/aurman/aur/yay
  register: yay

- name: Clone Yay
  git:
    repo: https://aur.archlinux.org/yay.git
    dest: /home/aurman/aur/yay
    accept_hostkey: yes
  become: yes
  become_user: aurman
  when: yay.stat.exists == False

- name: Build Yay
  command: chdir=/home/aurman/aur/yay makepkg --cleanbuild --nodeps --force
  become: yes
  become_user: aurman
  when: yay.stat.exists == False
 
- name: Install Yay
  shell: chdir=/home/aurman/aur/yay pacman -U --noconfirm $(ls | grep -i -m 1 yay*.pkg.tar.xz)
  become: yes
  become_method: sudo
  when: yay.stat.exists == False

  #- name: Install i3
  #  pacman:
  #    name: 
  #      - i3
  #      - lightdm
  #      - networkmanager
  #      - dmenu
  #      - xorg
  #    state: latest

  #- name: Install Deepin DE and NetworkManager
  #  pacman:
  #    name: 
  #      - deepin
  #      - deepin-extra
  #      - networkmanager
  #    state: latest
  #  retries: 3
  #  delay: 1
  #  register: result
  #  until: result.failed == False

  #- name: Update LightDM Config
  #  lineinfile:
  #    path: /etc/lightdm/lightdm.conf
  #    regexp: '^greeter-session=*'
  #    line: 'greeter-session=lightdm-deepin-greeter'

  #- name: Make i3 Default
  #  lineinfile:
  #    path: /etc/lightdm/lightdm.conf
  #    regexp: '^#user-session=*'
  #    line: 'user-session=i3'
  #
  #- name: Enable LightDM
  #  systemd:
  #    name: lightdm
  #    enabled: yes
  #
  #- name: Enable NetworkManager.service
  #  systemd:
  #    name: NetworkManager.service
  #    enabled: yes

- name: Install Desktop Environment and Other Graphical Software
  pacman:
    name:
      - plasma
      - sddm
      - i3
      - networkmanager
      - rofi
    state: latest

- name: Enable Periodic TRIM
  systemd:
    name: fstrim.timer
    enabled: yes

- name: Don't load Speck/Simon (NSA Crypto)
  kernel_blacklist:
    name: CONFIG_CRYPTO_SPECK
    state: present

- name: Install Other Pacman Packages
  pacman:
    name:
      - arc-gtk-theme
      - curl
      - firefox
      - kvantum-qt5
      - kvantum-theme-arc
      - python-pip
      - python-pywal
      - python2-pip
      - termite
      - thefuck
      - tmux
      - vagrant
      - variety
      - veracrypt
      - virtualbox
      - virtualbox-host-modules-arch
      - wget
      - yakuake
    state: latest

- name: Create {{ username }}
  user:
    name: "{{ username }}"
    shell: /usr/bin/zsh
    create_home: yes
    state: present
    groups: "wheel,docker"
    append: yes

- name: Install Git dependencies
  include: roles/System Configuration Sync/tasks/git.yml

- stat: path=/home/aurman/aur/yay
  register: yay

- name: Setup AUR
  include: roles/System Configuration Sync/tasks/aur.yml
  retries: 3
  delay: 1
  register: result
  until: result.failed == False

- name: Install Gaming Software
  include: roles/System Configuration Sync/tasks/gaming.yml
  tags: 
    - gaming

- name: Pull Down dotfiles
  command: yadm clone https://github.com/kevinjpickard/dotfiles.git
  become: yes
  become_user: "{{ username }}"

